/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['org.geogig.web/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.Person = factory(root.Geogig.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Person model module.
   * @module org.geogig.web/org.geogig.web.model/Person
   * @version 1.0-SNAPSHOT
   */

  /**
   * Constructs a new <code>Person</code>.
   * Identity and timestamp for the authorship of revision content, as used in Commit and Tag objects
   * @alias module:org.geogig.web/org.geogig.web.model/Person
   * @class
   * @param timestamp {Number} timestamp at which this person created the revision object it's been accountable for, as milliseconds since January 1, 1970, 00:00:00 GMT
   * @param timezoneOffset {Number} time zone offset from UTC, in milliseconds
   */
  var exports = function(timestamp, timezoneOffset) {
    var _this = this;



    _this['timestamp'] = timestamp;
    _this['timezoneOffset'] = timezoneOffset;
  };

  /**
   * Constructs a <code>Person</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:org.geogig.web/org.geogig.web.model/Person} obj Optional instance to populate.
   * @return {module:org.geogig.web/org.geogig.web.model/Person} The populated <code>Person</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
      }
      if (data.hasOwnProperty('timezoneOffset')) {
        obj['timezoneOffset'] = ApiClient.convertToType(data['timezoneOffset'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Name of the individual accountable to this signature
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * email address of the individual accountable to this signature
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * timestamp at which this person created the revision object it's been accountable for, as milliseconds since January 1, 1970, 00:00:00 GMT
   * @member {Number} timestamp
   */
  exports.prototype['timestamp'] = undefined;
  /**
   * time zone offset from UTC, in milliseconds
   * @member {Number} timezoneOffset
   */
  exports.prototype['timezoneOffset'] = undefined;



  return exports;
}));


