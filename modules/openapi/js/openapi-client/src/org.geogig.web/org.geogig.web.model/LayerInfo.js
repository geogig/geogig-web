/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['org.geogig.web/ApiClient', 'org.geogig.web/org.geogig.web.model/BoundingBox', 'org.geogig.web/org.geogig.web.model/RevisionFeatureType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BoundingBox'), require('./RevisionFeatureType'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.LayerInfo = factory(root.Geogig.ApiClient, root.Geogig.BoundingBox, root.Geogig.RevisionFeatureType);
  }
}(this, function(ApiClient, BoundingBox, RevisionFeatureType) {
  'use strict';




  /**
   * The LayerInfo model module.
   * @module org.geogig.web/org.geogig.web.model/LayerInfo
   * @version 1.0-SNAPSHOT
   */

  /**
   * Constructs a new <code>LayerInfo</code>.
   * Single Layer metadata at a given head/branch
   * @alias module:org.geogig.web/org.geogig.web.model/LayerInfo
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>LayerInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:org.geogig.web/org.geogig.web.model/LayerInfo} obj Optional instance to populate.
   * @return {module:org.geogig.web/org.geogig.web.model/LayerInfo} The populated <code>LayerInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('head')) {
        obj['head'] = ApiClient.convertToType(data['head'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('title')) {
        obj['title'] = ApiClient.convertToType(data['title'], 'String');
      }
      if (data.hasOwnProperty('abstract')) {
        obj['abstract'] = ApiClient.convertToType(data['abstract'], 'String');
      }
      if (data.hasOwnProperty('size')) {
        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
      }
      if (data.hasOwnProperty('bounds')) {
        obj['bounds'] = BoundingBox.constructFromObject(data['bounds']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = RevisionFeatureType.constructFromObject(data['type']);
      }
    }
    return obj;
  }

  /**
   * name of the branch or other head ref-spec (commit id, tag name, etc) where the layer info exists as advertised
   * @member {String} head
   */
  exports.prototype['head'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} title
   */
  exports.prototype['title'] = undefined;
  /**
   * @member {String} abstract
   */
  exports.prototype['abstract'] = undefined;
  /**
   * @member {Number} size
   * @default 0
   */
  exports.prototype['size'] = 0;
  /**
   * @member {module:org.geogig.web/org.geogig.web.model/BoundingBox} bounds
   */
  exports.prototype['bounds'] = undefined;
  /**
   * @member {module:org.geogig.web/org.geogig.web.model/RevisionFeatureType} type
   */
  exports.prototype['type'] = undefined;



  return exports;
}));


