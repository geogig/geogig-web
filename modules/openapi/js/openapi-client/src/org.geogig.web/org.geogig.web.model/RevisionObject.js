/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['org.geogig.web/ApiClient', 'org.geogig.web/org.geogig.web.model/ObjectType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ObjectType'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.RevisionObject = factory(root.Geogig.ApiClient, root.Geogig.ObjectType);
  }
}(this, function(ApiClient, ObjectType) {
  'use strict';




  /**
   * The RevisionObject model module.
   * @module org.geogig.web/org.geogig.web.model/RevisionObject
   * @version 1.0-SNAPSHOT
   */

  /**
   * Constructs a new <code>RevisionObject</code>.
   * Abstract base class for the closed set of revision objects. A revision object is one of the five possible kinds of objects that are stored in a geogig repository and whose relationships constitutes the repository&#39;s revision graph
   * @alias module:org.geogig.web/org.geogig.web.model/RevisionObject
   * @class
   * @param id {String} 
   * @param objectType {module:org.geogig.web/org.geogig.web.model/ObjectType} 
   */
  var exports = function(id, objectType) {
    var _this = this;

    _this['id'] = id;
    _this['objectType'] = objectType;
  };

  /**
   * Constructs a <code>RevisionObject</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:org.geogig.web/org.geogig.web.model/RevisionObject} obj Optional instance to populate.
   * @return {module:org.geogig.web/org.geogig.web.model/RevisionObject} The populated <code>RevisionObject</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('objectType')) {
        obj['objectType'] = ObjectType.constructFromObject(data['objectType']);
      }
    }
    return obj;
  }

  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:org.geogig.web/org.geogig.web.model/ObjectType} objectType
   */
  exports.prototype['objectType'] = undefined;



  return exports;
}));


