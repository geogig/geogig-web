/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LayerSummary'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LayerSummary'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.RepoLayerSummary = factory(root.Geogig.ApiClient, root.Geogig.LayerSummary);
  }
}(this, function(ApiClient, LayerSummary) {
  'use strict';




  /**
   * The RepoLayerSummary model module.
   * @module model/RepoLayerSummary
   * @version 0.1-SNAPSHOT
   */

  /**
   * Constructs a new <code>RepoLayerSummary</code>.
   * Summary of layers in a repository
   * @alias module:model/RepoLayerSummary
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>RepoLayerSummary</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RepoLayerSummary} obj Optional instance to populate.
   * @return {module:model/RepoLayerSummary} The populated <code>RepoLayerSummary</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('repository')) {
        obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
      }
      if (data.hasOwnProperty('layers')) {
        obj['layers'] = ApiClient.convertToType(data['layers'], [LayerSummary]);
      }
    }
    return obj;
  }

  /**
   * @member {String} repository
   */
  exports.prototype['repository'] = undefined;
  /**
   * @member {Array.<module:model/LayerSummary>} layers
   */
  exports.prototype['layers'] = undefined;



  return exports;
}));


