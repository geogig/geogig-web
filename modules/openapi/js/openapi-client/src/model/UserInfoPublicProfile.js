/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.UserInfoPublicProfile = factory(root.Geogig.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The UserInfoPublicProfile model module.
   * @module model/UserInfoPublicProfile
   * @version 0.1-SNAPSHOT
   */

  /**
   * Constructs a new <code>UserInfoPublicProfile</code>.
   * @alias module:model/UserInfoPublicProfile
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>UserInfoPublicProfile</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserInfoPublicProfile} obj Optional instance to populate.
   * @return {module:model/UserInfoPublicProfile} The populated <code>UserInfoPublicProfile</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('avatar_url')) {
        obj['avatar_url'] = ApiClient.convertToType(data['avatar_url'], 'String');
      }
      if (data.hasOwnProperty('gravatar_id')) {
        obj['gravatar_id'] = ApiClient.convertToType(data['gravatar_id'], 'String');
      }
      if (data.hasOwnProperty('company')) {
        obj['company'] = ApiClient.convertToType(data['company'], 'String');
      }
      if (data.hasOwnProperty('public_repos')) {
        obj['public_repos'] = ApiClient.convertToType(data['public_repos'], 'Number');
      }
      if (data.hasOwnProperty('followers')) {
        obj['followers'] = ApiClient.convertToType(data['followers'], 'Number');
      }
      if (data.hasOwnProperty('following')) {
        obj['following'] = ApiClient.convertToType(data['following'], 'Number');
      }
    }
    return obj;
  }

  /**
   * @member {String} avatar_url
   */
  exports.prototype['avatar_url'] = undefined;
  /**
   * @member {String} gravatar_id
   */
  exports.prototype['gravatar_id'] = undefined;
  /**
   * @member {String} company
   */
  exports.prototype['company'] = undefined;
  /**
   * @member {Number} public_repos
   */
  exports.prototype['public_repos'] = undefined;
  /**
   * @member {Number} followers
   * @default 0
   */
  exports.prototype['followers'] = 0;
  /**
   * @member {Number} following
   * @default 0
   */
  exports.prototype['following'] = 0;



  return exports;
}));


