/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/StoreConnectionInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./StoreConnectionInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.PostgresStoreInfo = factory(root.Geogig.ApiClient, root.Geogig.StoreConnectionInfo);
  }
}(this, function(ApiClient, StoreConnectionInfo) {
  'use strict';




  /**
   * The PostgresStoreInfo model module.
   * @module model/PostgresStoreInfo
   * @version 0.1-SNAPSHOT
   */

  /**
   * Constructs a new <code>PostgresStoreInfo</code>.
   * @alias module:model/PostgresStoreInfo
   * @class
   * @extends module:model/StoreConnectionInfo
   * @param type {String} 
   */
  var exports = function(type) {
    var _this = this;
    StoreConnectionInfo.call(_this, type);






  };

  /**
   * Constructs a <code>PostgresStoreInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PostgresStoreInfo} obj Optional instance to populate.
   * @return {module:model/PostgresStoreInfo} The populated <code>PostgresStoreInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      StoreConnectionInfo.constructFromObject(data, obj);
      if (data.hasOwnProperty('server')) {
        obj['server'] = ApiClient.convertToType(data['server'], 'String');
      }
      if (data.hasOwnProperty('port')) {
        obj['port'] = ApiClient.convertToType(data['port'], 'Number');
      }
      if (data.hasOwnProperty('database')) {
        obj['database'] = ApiClient.convertToType(data['database'], 'String');
      }
      if (data.hasOwnProperty('schema')) {
        obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
      }
      if (data.hasOwnProperty('user')) {
        obj['user'] = ApiClient.convertToType(data['user'], 'String');
      }
      if (data.hasOwnProperty('password')) {
        obj['password'] = ApiClient.convertToType(data['password'], 'String');
      }
    }
    return obj;
  }

  exports.prototype = Object.create(StoreConnectionInfo.prototype);
  exports.prototype.constructor = exports;

  /**
   * @member {String} server
   * @default 'localhost'
   */
  exports.prototype['server'] = 'localhost';
  /**
   * @member {Number} port
   * @default 5432
   */
  exports.prototype['port'] = 5432;
  /**
   * @member {String} database
   * @default 'geogig'
   */
  exports.prototype['database'] = 'geogig';
  /**
   * @member {String} schema
   * @default 'public'
   */
  exports.prototype['schema'] = 'public';
  /**
   * @member {String} user
   * @default 'postgres'
   */
  exports.prototype['user'] = 'postgres';
  /**
   * @member {String} password
   */
  exports.prototype['password'] = undefined;



  return exports;
}));


