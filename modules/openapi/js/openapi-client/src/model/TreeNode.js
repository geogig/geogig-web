/**
 * GeoGig Web API
 * GeoGig Web API.  You can find out more about GeoGig at [http://geogig.org](http://geogig.org)
 *
 * OpenAPI spec version: 0.1.0
 * Contact: groldan@boundlessgeo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: unset
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BoundingBox', 'model/ObjectHash', 'model/ObjectType'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BoundingBox'), require('./ObjectHash'), require('./ObjectType'));
  } else {
    // Browser globals (root is window)
    if (!root.Geogig) {
      root.Geogig = {};
    }
    root.Geogig.TreeNode = factory(root.Geogig.ApiClient, root.Geogig.BoundingBox, root.Geogig.ObjectHash, root.Geogig.ObjectType);
  }
}(this, function(ApiClient, BoundingBox, ObjectHash, ObjectType) {
  'use strict';




  /**
   * The TreeNode model module.
   * @module model/TreeNode
   * @version 0.1-SNAPSHOT
   */

  /**
   * Constructs a new <code>TreeNode</code>.
   * @alias module:model/TreeNode
   * @class
   * @param name {String} 
   * @param objectId {module:model/ObjectHash} 
   * @param type {module:model/ObjectType} 
   */
  var exports = function(name, objectId, type) {
    var _this = this;

    _this['name'] = name;
    _this['objectId'] = objectId;
    _this['type'] = type;



  };

  /**
   * Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TreeNode} obj Optional instance to populate.
   * @return {module:model/TreeNode} The populated <code>TreeNode</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('objectId')) {
        obj['objectId'] = ObjectHash.constructFromObject(data['objectId']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ObjectType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('metadataId')) {
        obj['metadataId'] = ObjectHash.constructFromObject(data['metadataId']);
      }
      if (data.hasOwnProperty('bounds')) {
        obj['bounds'] = BoundingBox.constructFromObject(data['bounds']);
      }
      if (data.hasOwnProperty('extraData')) {
        obj['extraData'] = ApiClient.convertToType(data['extraData'], {'String': Object});
      }
    }
    return obj;
  }

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {module:model/ObjectHash} objectId
   */
  exports.prototype['objectId'] = undefined;
  /**
   * @member {module:model/ObjectType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * @member {module:model/ObjectHash} metadataId
   */
  exports.prototype['metadataId'] = undefined;
  /**
   * @member {module:model/BoundingBox} bounds
   */
  exports.prototype['bounds'] = undefined;
  /**
   * @member {Object.<String, Object>} extraData
   */
  exports.prototype['extraData'] = undefined;



  return exports;
}));


